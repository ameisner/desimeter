#!/usr/bin/env python

import argparse
import os.path
import sys
import matplotlib.pyplot as plt
import numpy as np
from astropy.table import Table
from desimeter.util import parse_fibers

parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,
                                     description="""Plot FVC spots, showing residuals with metrology""")
parser.add_argument('-i','--infile', type = str, default = None, required = True, nargs="*",
                    help = 'path to one or several FVC spots tables in CSV format (with X_FP,Y_FP,LOCATION columns)')
parser.add_argument('--locations', type = str, default = None, required = True,
                    help = 'list of locations to show (location=petal_loc*1000+device_loc, example 1012 , 1001,1002,1013 or 4040:4053 ...)')
parser.add_argument('--legend', action = 'store_true',
                    help = 'show legend')

args  = parser.parse_args()

fig = plt.figure(figsize=(6,6))

locations=parse_fibers(args.locations)

x=dict()
y=dict()
for l in locations :
    x[l]=list()
    y[l]=list()
for filename in  args.infile :

    table=Table.read(filename,format="csv")

    for l in locations :
        ii = np.where(table["LOCATION"]==l)[0]
        x[l].append(table["X_FP"][ii])
        y[l].append(table["Y_FP"][ii])
for l in locations :
    plt.plot(x[l],y[l],"o",label="LOC={:04d}".format(l))

if args.legend :
    plt.legend()
plt.xlabel("XFP (mm)")
plt.ylabel("YFP (mm)")
plt.grid()
plt.show()


